service: crm-theam-serverless-api

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-west-2
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - { "Fn::GetAtt": ["customerTable", "Arn" ] }
    - Effect: Allow
      Action:
        - s3:*
      Resource: { "Fn::Join": ["", ["arn:aws:s3:::customerprofileimages", "/*" ] ] }

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  login:
    handler: auth/login.handler
    memorySize: 128
    events:
      - http:
          path: login
          method: POST

  getAllUsers:
    handler: users/getAllUsers.handler
    memorySize: 128
    events:
      - http:
          path: users
          method: GET

  getUsersById:
    handler: users/getUserById.handler
    memorySize: 128
    events:
      - http:
          path: users/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true

  newUser:
    handler: users/newUser.handler
    memorySize: 128
    events:
      - http:
          path: users
          method: POST

  updateUser:
    handler: users/updateUser.handler
    memorySize: 128
    events:
      - http:
          path: users/{id}
          method: PUT
          request:
            parameters:
              paths:
                id: true

  getAllCustomers:
    handler: customers/getAllCustomers.handler
    memorySize: 128
    events:
      - http:
          path: customers
          method: GET

  getCustomersById:
    handler: customers/getCustomerById.handler
    memorySize: 128
    events:
      - http:
          path: customers/{id}
          method: GET
          request:
            parameters:
              paths:
                id: true

  newCustomer:
    handler: customers/newCustomer.handler
    memorySize: 128
    events:
      - http:
          path: customers
          method: POST

  updateCustomer:
    handler: customers/updateCustomer.handler
    memorySize: 128
    events:
      - http:
          path: customers/{id}
          method: PUT
          request:
            parameters:
              paths:
                id: true

  deleteCustomer:
    handler: customers/deleteCustomer.handler
    memorySize: 128
    events:
      - http:
          path: customers/{id}
          method: DELETE
          request:
            parameters:
              paths:
                id: true

  getCustomerProfileImage:
    handler: customers/getProfileImageUrl.handler
    memorySize: 128
    events:
      - http:
          path: customers/{id}/imageUrl
          method: GET
          request:
            parameters:
              paths:
                id: true
              querystrings:
                operation: false

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
    uploadBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: customerprofileimages
    customerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: customers
        AttributeDefinitions:
          - AttributeName: customerId
            AttributeType: S
        KeySchema:
          - AttributeName: customerId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    userPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: user-pool
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email
    userPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: user-pool-client
        UserPoolId:
          Ref: userPool
        ExplicitAuthFlows:
          - ADMIN_NO_SRP_AUTH
        GenerateSecret: false
